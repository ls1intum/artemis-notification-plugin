name: Continuous Delivery

# c.f. https://github.com/ls1intum/docker-jdk-node-yarn/blob/main/.github/workflows/build-and-push.yml

on:
  pull_request:
  push:
    branches:
      - main
      - release/*
    tags: '*'
  release:
    types:
      - created

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Production Build
        run: ./gradlew clean test jar
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: artemis-notification-plugin.jar
          path: build/libs/artemis-notification-plugin-*.jar
      - name: Upload Release Artifact
        if: github.event_name == 'release' && github.event.action == 'created'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/libs/artemis-notification-plugin-${{ github.event.release.tag_name }}.jar
          asset_name: artemis-notification-plugin.jar
          asset_content_type: application/x-webarchive

  buildx:
    name: Build and Push the Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Compute Tag
        uses: actions/github-script@v6
        id: compute-tag
        with:
          result-encoding: string
          script: |
            if (context.eventName === "pull_request") {
              return "pr-" + context.issue.number;
            }
            if (context.eventName === "push") {
              if (context.ref.startsWith("refs/tags/")) {
                return context.ref.slice(10);
              }
              if (context.ref === "refs/heads/main") {
                return "latest";
              }
            }
            return "FALSE";
      - uses: actions/checkout@v2

      -
        name: Docker Login
        id: docker-login
        run: |
          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ steps.compute-tag.outputs.result != 'FALSE' }}

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      -
        name: Install Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          version: latest

      -
        name: Build Image and Push to GitHub Container Registry and DockerHub
        uses: docker/build-push-action@v2
        if: ${{ steps.compute-tag.outputs.result != 'FALSE' }}
        with:
          context: .
          tags: |
            ls1tum/artemis-notification-plugin:${{ steps.compute-tag.outputs.result }}
            ghcr.io/ls1intum/artemis-notification-plugin:${{ steps.compute-tag.outputs.result }}
          platforms: linux/amd64,linux/arm64/v8
          push: true
